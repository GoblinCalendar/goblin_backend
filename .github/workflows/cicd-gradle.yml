name: goblin CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      ## 레포지토리 체크아웃
      - uses: actions/checkout@v4

      ## JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      ## Gradle caching
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      ## resources 폴더 생성
      - name: Create resources folder
        run: |
          mkdir -p ./src/main/resources  # 폴더 생성

      ## application.properties 파일 생성
      - name: Create application.properties
        run: |
          touch ./src/main/resources/application.properties  # 파일 생성
          echo "${{secrets.PROPERTIES_DEV}}" > ./src/main/resources/application.properties  # 환경 변수에서 내용 추가
        shell: bash

      ## Grant execute permission for Gradlew
      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      ## Docker 이미지 빌드 & 푸
      - name: Docker Build and Push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/goblin-server .
          docker push ${{ secrets.DOCKER_USERNAME }}/goblin-server:latest

      ## Docker deploy
      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        if: contains(github.ref, 'main')
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USERNAME }}
          port: 22
          script: |
            docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKER_USERNAME }}/goblin-server
            docker-compose up -d
            docker image prune -f

  ## Time
  current-time:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00"

      - name: Print Current Time
        run: echo "Current Time=${{ steps.current-time.outputs.formattedTime }}"
        shell: bash
