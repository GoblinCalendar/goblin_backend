plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.11.0'
}

group = 'goblin'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//swagger 설정 openapi-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.5.0'
	//devtools > 서버 재시작 안해도 변경있으면 자동 재시작
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	//db설정
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//jwt
	implementation group:'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	implementation group:'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	implementation group:'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부

def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

tasks.named('compileJava') {
	dependsOn 'spotlessApply'
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

test {
	useJUnitPlatform()
}

spotless {
	java {
		//Google JAVA Format 적용
		googleJavaFormat()
		// 아래 순서로 import 문 정렬
		importOrder('java', 'javax', 'jakarta', 'org', 'com')
		// 사용하지 않는 import 제거
		removeUnusedImports()
		// 각 라인 끝에 있는 공백을 제거
		trimTrailingWhitespace()
		// 파일 끝에 새로운 라인 추가
		endWithNewline()
	}
}